{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://kekstagram/./js/show-new-photo.js","webpack://kekstagram/./js/valid.js","webpack://kekstagram/webpack/bootstrap","webpack://kekstagram/./js/itil.js","webpack://kekstagram/./js/full-preview.js","webpack://kekstagram/./js/preview.js","webpack://kekstagram/./js/effect.js","webpack://kekstagram/./js/editor.js","webpack://kekstagram/./js/fetch.js","webpack://kekstagram/./js/sending-form.js","webpack://kekstagram/./js/main.js"],"sourcesContent":["const uploadInput = document.querySelector('#upload-file');\nconst previewPhoto = document.querySelector('.img-upload__preview > img');\nconst effectPrew = document.querySelectorAll('.effects__preview'); //работаем с бакраунд image\nconst CORRECT_EXTENSIONS_NAMES = ['jpeg', 'png', 'gif', 'jpg']\n\nconst DIMENSIONS_PREVIEW = {\n  WIDHT: '600',\n  HEIGHT: '600'\n}\n\nuploadInput.addEventListener('change', (evt) => {\n\n  const file = uploadInput.files[0];\n  const nameFile = file.name.toLowerCase();\n  const matches = CORRECT_EXTENSIONS_NAMES.some((it) => nameFile.endsWith(it));\n\n  if(matches) {\n    const reader = new FileReader();\n\n    reader.addEventListener('load', () => {\n      previewPhoto.src = reader.result;\n      previewPhoto.width = DIMENSIONS_PREVIEW.WIDHT;\n      previewPhoto.height = DIMENSIONS_PREVIEW.HEIGHT;\n      previewPhoto.style.backgroundSize = 'cover';\n      effectPrew.forEach(element => {\n        element.style.backgroundImage = `url(${reader.result})`\n      });\n    })\n    reader.readAsDataURL(file)\n  }\n})\n","const Keys = {\n  ESC: 'Esc',\n  ESCAPE: 'Escape',\n}\n\nconst hashtagInput = document.querySelector('.text__hashtags');\nconst comentInput = document.querySelector('.text__description');\nconst formBtn = document.querySelector('#upload-submit');\nconst form = document.querySelector('.img-upload__form');\n\n// функция которая отменят закрытие формы если импут в фокусу и отнимает у него фокус\nconst stopPropEsc = (el) => {\n  el.addEventListener('keydown', (evt) => {\n    if(evt.key === Keys.ESC || evt.key === Keys.ESCAPE) {\n      evt.stopPropagation()\n      el.blur()\n    }\n  })\n}\nstopPropEsc(hashtagInput)\nstopPropEsc(comentInput)\n\nhashtagInput.addEventListener('input', () => {\n  // Устанавливаем начальное значение валидности поля ввода\n  hashtagInput.setCustomValidity('');\n\n  // Получаем текст из поля ввода, удаляем лишние пробелы и приводим к нижнему регистру\n  let inputText = hashtagInput.value.trim().toLowerCase();\n  // Разбиваем текст на массив по пробелам\n  let inputArray = inputText.split(' ');\n\n  // Проверяем, начинается ли каждый хэш-тег с символа '#'\n  const isStartNotHashtag = inputArray.some((item) => item[0] !== '#');\n  if (isStartNotHashtag) {\n      hashtagInput.setCustomValidity('Хэш-тег должен начинаться с символа #');\n      hashtagInput.style.boxShadow = '0 0 8px red';\n  } else {\n    hashtagInput.style.boxShadow = '';\n  }\n\n  // Проверяем, что хотя бы один хэш-тег не состоит только из символа '#'\n  const isStartHash = inputArray.some((item) => item === '#');\n  if (isStartHash) {\n      hashtagInput.setCustomValidity('Хеш-тег не может состоять только из одной решетки (#)');\n      hashtagInput.style.boxShadow = '0 0 8px red';\n  } else {\n    hashtagInput.style.boxShadow = '';\n  }\n\n  // Проверяем, что длина каждого хэш-тега не превышает 20 символов\n  const lengthHash = inputArray.some((item) => item.length > 20);\n  if (lengthHash) {\n      hashtagInput.setCustomValidity('Максимальная длина хэш-тега 20 символов, включая символ #');\n      hashtagInput.style.boxShadow = '0 0 8px red';\n  } else {\n    hashtagInput.style.boxShadow = '';\n  }\n\n  // Проверяем, что количество хэш-тегов не превышает 5\n  if (inputArray.length > 5) {\n      hashtagInput.setCustomValidity('Нельзя указать больше пяти хэш-тегов');\n      hashtagInput.style.boxShadow = '0 0 8px red';\n  } else {\n    hashtagInput.style.boxShadow = '';\n  }\n\n  // Проверяем, разделяются ли хэш-теги пробелами\n  const hashtagsSeparatedBySpace = inputArray.some((item) => item.indexOf('#', 1) >= 0);\n  if (hashtagsSeparatedBySpace) {\n      hashtagInput.setCustomValidity('Хэш-теги должны разделяться пробелами');\n      hashtagInput.style.boxShadow = '0 0 8px red';\n  } else {\n    hashtagInput.style.boxShadow = '';\n  }\n\n  // Проверяем, есть ли дубликаты хэш-тегов в массиве\n  const duplicates = inputArray.filter((item, index) => inputArray.indexOf(item) !== index);\n  if (duplicates.length > 0) {\n      hashtagInput.setCustomValidity('Один и тот же хэш-тег не может быть использован дважды');\n      hashtagInput.style.boxShadow = '0 0 8px red';\n  } else {\n    hashtagInput.style.boxShadow = '';\n  }\n\n  // Проверяем, содержит ли строка после символа '#' только буквы и цифры\n  const isSpecialSimbol = (inputText) => {\n      return /[!@$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(inputText);\n  }\n  if (isSpecialSimbol(inputText)) {\n      hashtagInput.setCustomValidity('Строка после символа # должна содержать только буквы и цифры');\n      hashtagInput.style.boxShadow = '0 0 8px red';\n  } else {\n    hashtagInput.style.boxShadow = '';\n  }\n});\n\n\ncomentInput.addEventListener('input', function() {\n  // Проверка условия невалидности\n  if (textarea.value.length > 140) {\n      // Установка пользовательского сообщения о невалидности\n      textarea.setCustomValidity('Текст  не должен содержать более 140 символов');\n      // Установка стиля (красная рамка)\n      hashtagInput.style.boxShadow = '0 0 8px red';\n  } else {\n      // Сброс пользовательского сообщения о невалидности\n      textarea.setCustomValidity('');\n      // Удаление стиля (возвращение к стандартной рамке)\n      hashtagInput.style.boxShadow = '';\n  }\n});\n\n\n\n\n\n // Можно и так но setCustomValidity не красивый\n// hashtagInput.addEventListener('input', () => {\n//   // Устанавливаем начальное значение валидности поля ввода\n//   hashtagInput.setCustomValidity('');\n\n//   // Получаем текст из поля ввода, удаляем лишние пробелы и приводим к нижнему регистру\n//   let inputText = hashtagInput.value.trim().toLowerCase();\n//   // Разбиваем текст на массив по пробелам\n//   let inputArray = inputText.split(' ');\n\n//   // Проверяем, начинается ли каждый хэш-тег с символа '#'\n//   const isStartNotHashtag = inputArray.some((item) => item[0] !== '#');\n//   const isStartHash = inputArray.some((item) => item === '#');\n//   const lengthHash = inputArray.some((item) => item.length > 20);\n//   const hashtagsSeparatedBySpace = inputArray.some((item) => item.indexOf('#', 1) >= 0);\n//   const duplicates = inputArray.filter((item, index) => inputArray.indexOf(item) !== index);\n//   const isSpecialSymbol = (inputText) => /[!@$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(inputText);\n\n//   // Проверяем, что хотя бы одно условие не выполняется и устанавливаем соответствующее сообщение\n//   if (isStartNotHashtag || isStartHash || lengthHash || hashtagsSeparatedBySpace || duplicates.length > 0 || isSpecialSymbol(inputText)) {\n//       // Устанавливаем сообщение о невалидности\n//       hashtagInput.setCustomValidity('Пожалуйста, введите корректные хэш-теги');\n//       // Устанавливаем красную рамку\n//       hashtagInput.style.boxShadow = '0 0 8px red';\n//   } else {\n//       // Если все условия выполняются, снимаем сообщение о невалидности\n//       hashtagInput.setCustomValidity('');\n//       // Убираем красную рамку\n//       hashtagInput.style.boxShadow = '';\n//   }\n// });\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const getRandomNumber = (min, max) => {\n  if (min < 0 || max < 0) {\n    return -1; // Классический вариант возвращение ошибки, Так как функция должно возвращать число она вернет число\n  }\n  if(max < min) {\n    [min, max] = [max, min]\n  }\n  min = Math.floor(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); // Максимум и минимум включаются\n};\n\n\nconst stringCount = (text, sing) => text.length <= sing ? true : false ;\n\n\nconst getRandomElement = (elements) => elements[getRandomNumber(0, elements.length - 1)];\n\nconst checkEscapeKey = (evt) => evt.key === ('Escape' || 'Esc')\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nconst debounce = (cb, delay) => {\n  let timerId; // создаем таймер\n\n  // возвраещаем анонимную функцию которая вызывается при каждом вызове дебаунса\n  //внутри мы чекаем есть ли уже таймерИД и если есть мы его чистимб отменяя множество запусков колбека\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    //создаем новый таймер\n    timerId = setTimeout(() => {\n      cb(...args); // отвечает за вызов колбэк функции cb с переданными аргументами\n      timerId = null; // обнуляем таймер\n    }, delay);\n  };\n};\n\nexport {getRandomNumber, stringCount, getRandomElement, checkEscapeKey, shuffleArray, debounce}\n","import { checkEscapeKey } from './itil.js'\n\nconst bigPhoto = document.querySelector('.big-picture');\nconst body = document.querySelector('body');\nconst comentsList = bigPhoto.querySelector('.social__comments');\nconst comentTemplate = document.querySelector('#comment').content.querySelector('.social__comment');\nconst modalCloseBtn = document.querySelector('.big-picture__cancel');\nconst comentsLoaderBtn= document.querySelector('.comments-loader');\nconst socialCommentCount = document.querySelector('.social__comment-count');\nconst comentInput = document.querySelector('.social__footer-text');\nconst comentBtn = document.querySelector('.social__footer-btn');\nconst likeCounter = document.querySelector('.likes-count')\n\n\nlet comentsArray = []\nlet commentsToShow  = 5;\nlet loadedComents;\n\n\n\nconst createComment = (commentData) => {\n  const newComment = comentTemplate.cloneNode(true);\n  newComment.querySelector('.social__picture').src = commentData.avatar;\n  newComment.querySelector('.social__picture').alt = commentData.name;\n  newComment.querySelector('.social__text').textContent = commentData.message;\n  return newComment;\n};\n\nconst showComments = (comments) => {\n  comentsList.textContent = ''; // Очищаем содержимое, но не удаляем сам элемент\n  comments.slice(0, commentsToShow).forEach((comment) => {\n    const newComment = createComment(comment);\n    comentsList.appendChild(newComment);\n  });\n\n  loadedComents = Array.from(bigPhoto.querySelectorAll('.social__comment'));\n\n  if(comentsArray.length == loadedComents.length) {\n    comentsLoaderBtn.style.display = 'none';\n  }\n\n  socialCommentCount.textContent = `${loadedComents.length} из ${comentsArray.length} коментариев`\n\n\n};\n\n\nconst closeBigPhoto = () => {\n  bigPhoto.classList.add('hidden');\n  body.classList.remove('modal-open');\n  modalCloseBtn.removeEventListener('click', closeBigPhoto);\n  document.removeEventListener('keydown', checkEscapeKey);\n  commentsToShow = 5;\n  loadedComents = 0;\n  comentsLoaderBtn.style.display = 'block';\n}\n\n\nconst show = (url, likes, coments, description) => {\n  comentsArray = coments\n  body.classList.add('modal-open')\n  bigPhoto.querySelector('.big-picture__img > img').src = url;\n  bigPhoto.querySelector('.likes-count').textContent = likes;\n  bigPhoto.querySelector('.social__caption').textContent = description;\n  showComments(coments)\n  let numberOfComments = coments.length;\n  modalCloseBtn.addEventListener('click', closeBigPhoto);\n  document.addEventListener('keydown', (evt) => {\n    if (checkEscapeKey(evt)) {\n      closeBigPhoto()\n    }\n  });\n  bigPhoto.classList.remove('hidden');\n}\n\nconst onClickComentsMore = () => {\n  comentsList.textContent = '';\n  commentsToShow += 5;\n  showComments([... comentsArray].slice(0, commentsToShow));\n}\n\n\n\n\nconst resetComentForm = () => {\n  comentInput.value = '';\n}\n\nconst createNewComent = () => {\n    return {\n      id: 1005,\n      avatar: 'img/avatar-6.svg',\n      message: comentInput.value,\n      name: 'Имя пользователя',\n    }\n}\n\n\nconst sendingComment = () => {\n  const comment = createNewComent();\n  comentsArray.unshift(comment);\n  resetComentForm();\n  showComments(comentsArray);\n  console.log(comment);\n};\n\n\nlikeCounter.addEventListener('click', () => {\n  let likes = likeCounter.textContent\n  if(likeCounter.classList.contains('likes-count--active')) {\n    likeCounter.textContent = Number(likes) - 1;\n    likeCounter.classList.remove('likes-count--active');\n  } else {\n  likeCounter.classList.toggle('likes-count--active');\n  likeCounter.textContent = Number(likes) + 1;\n  }\n})\n\ncomentBtn.addEventListener('click', sendingComment)\n\ncomentsLoaderBtn.addEventListener('click', onClickComentsMore)\n\n\nexport {show}\n","import { show } from './full-preview.js';\n\nconst NEW_POST_TEMPLATE = document.querySelector('#picture').content.querySelector('.picture');\nconst PICTURES_LIST = document.querySelector('.pictures');\nconst PostListFragment = document.createDocumentFragment();\n\nconst createPostElement = ({ url, likes, comments, description }) => {\n  const newPhoto = NEW_POST_TEMPLATE.cloneNode(true);\n  newPhoto.querySelector('.picture__img').src = url;\n  newPhoto.querySelector('.picture__comments').textContent = comments.length;\n  newPhoto.querySelector('.picture__likes').textContent = likes;\n  return newPhoto;\n};\n\nconst attachPreviewHandler = (post, { url, likes, comments, description }) => {\n  post.addEventListener('click', (evt) => {\n    evt.preventDefault();\n    show(url, likes, comments, description);\n  });\n};\n\n\nconst renderPhotos = (data) => {\n data.forEach((el) => {\n    const newPost = createPostElement(el);\n    PostListFragment.appendChild(newPost);\n    attachPreviewHandler(newPost, el);\n  });\n  PICTURES_LIST.appendChild(PostListFragment);\n};\n\n\nexport {renderPhotos}\n","const EFFECTS = [\n  {\n    name: 'none',\n    style: 'none',\n    min: 0,\n    max: 100,\n    step: 1,\n    unit: '',\n  },\n  {\n    name: 'chrome',\n    style: 'grayscale',\n    min: 0,\n    max: 1,\n    step: 0.1,\n    unit: '',\n  },\n  {\n    name: 'sepia',\n    style: 'sepia',\n    min: 0,\n    max: 1,\n    step: 0.1,\n    unit: '',\n  },\n  {\n    name: 'marvin',\n    style: 'invert',\n    min: 0,\n    max: 100,\n    step: 1,\n    unit: '%',\n  },\n  {\n    name: 'phobos',\n    style: 'blur',\n    min: 0,\n    max: 3,\n    step: 0.1,\n    unit: 'px',\n  },\n  {\n    name: 'heat',\n    style: 'brightness',\n    min: 1,\n    max: 3,\n    step: 0.1,\n    unit: '',\n  },\n];\nconst image = document.querySelector('.img-upload__preview img');\nconst effects = document.querySelector('.effects');\nconst slider = document.querySelector('.effect-level__slider');\nconst sliderContainer = document.querySelector('.img-upload__effect-level');\nconst effectLevel = document.querySelector('.effect-level__value');\n\nconst DEFAULT_EFFECT = EFFECTS[0];\nlet chosenEffect = DEFAULT_EFFECT;\n\n\n//вернет тру если выбран дефолтный фильтр\nconst isDefault = () => chosenEffect === DEFAULT_EFFECT;\n\nconst showSlider = () => {\n  sliderContainer.classList.remove('hidden');\n};\n\nconst hideSlider = () => {\n  sliderContainer.classList.add('hidden');\n};\n\n\n//обновляет слайдер, подставляяя значения из текушего эфекта\n// передаем ее в функцию где определяется chosenEffect\nconst updateSlider = () => {\n  slider.noUiSlider.updateOptions({\n    range: {\n      min: chosenEffect.min,\n      max: chosenEffect.max,\n    },\n    step: chosenEffect.step,\n    start: chosenEffect.max,\n  });\n\n  //если дефолтный обьект скроет див со слайдером\n  if (isDefault()) {\n    hideSlider();\n  } else {\n    showSlider();\n  }\n};\n// проверка на то что если нажат елемент без класса эфект-радиоб ничего не вовзвращает.\n// а если с классом то chosenEffect = метод файнд ищет в эфектах нужный обьект у которого имя равно  значению value нажатого обьекта\n// предаем колбэком в прослушку изменения инпутов\nconst onEffectsChange = (evt) => {\n  if (!evt.target.classList.contains('effects__radio')) {\n    return;\n  }\n  chosenEffect = EFFECTS.find((effect) => effect.name === evt.target.value); // ищем в эфек\n  image.className = `effects__preview--${chosenEffect.name}`;\n  updateSlider();\n};\n\n//если дефолтный установит стайл нон, если  выбраный то подставит нужный\nconst onSliderUpdate = () => {\n  const sliderValue = slider.noUiSlider.get(); // назначаем sliderValue равным значению слайдера\n  if (isDefault()) {\n    image.style.filter = DEFAULT_EFFECT.style;\n  } else {\n    image.style.filter = `${chosenEffect.style}(${sliderValue}${chosenEffect.unit})`;\n  }\n  effectLevel.value = sliderValue; // записываем значение слайдера в инпут для отправки\n};\n\n// Сбрасываем настройки\n\nconst resetEffect = () => {\n  sliderContainer.classList.add('hidden');\n  image.className = '';\n}\n\n\n\n\n// создаем слайдер , а обновляем когда определяем chosenEffect\nnoUiSlider.create(slider, {\n  range: {\n    min: DEFAULT_EFFECT.min,\n    max: DEFAULT_EFFECT.max,\n  },\n  start: DEFAULT_EFFECT.max,\n  step: DEFAULT_EFFECT.step,\n  connect: 'lower',\n});\nhideSlider();\n//слушаем событие изменения инпутов и переопределяем значения chosenEffect, и обновляем слайдер\neffects.addEventListener('change', onEffectsChange);\n\nslider.noUiSlider.on('update', onSliderUpdate);\n\nexport {\n  resetEffect\n}\n","import { resetEffect } from './effect.js'\n\n\nconst uploadModal = document.querySelector('.img-upload__overlay')\nconst uploadInput = document.querySelector('#upload-file');\nconst body = document.querySelector('body');\nconst CloseUploadModalBtn = document.querySelector('#upload-cancel');\nconst scaleValue = document.querySelector('.scale__control--value');\nconst scaleSmallerBtn = document.querySelector('.scale__control--smaller');\nconst scaleBiggerBtn = document.querySelector('.scale__control--bigger');\nconst imgPreview = document.querySelector('.img-upload__preview > img');\n\nconst Keys = {\n  ESC: 'Esc',\n  ESCAPE: 'Escape',\n}\n\nconst Scale = {\n  MIN: 25,\n  MAX: 100,\n  STEP: 25,\n}\n\n\nconst resetSetting = () => {\n  imgPreview.style.filter = '';\n  imgPreview.style = 'transform: scale(1.00)'\n  uploadInput.value = '';\n};\n\nconst closeUploadModal = () => {\n  uploadModal.classList.add('hidden');\n  body.classList.remove('modal-open');\n  resetSetting()\n  resetEffect()\n};\n\nconst OpenUploadModal = () => {\n  uploadModal.classList.remove('hidden');\n  body.classList.add('modal-open');\n  scaleValue.value = '100%'\n}\n\n// const showChoosePhoto = (evt) => {\n//   const file = evt.target.files[0]\n//   console.log(file)\n// }\n\n\n//по изменению инпута открываем модалку и подписываемся на закрытие модалки\nuploadInput.addEventListener('change', (evt) => {\n  OpenUploadModal();\n\n  const selectedFile = evt.target.files[0]; // Получаем выбранный файл\n\n  console.log(selectedFile); // Выводим информацию о файле в консоль\n\n  CloseUploadModalBtn.addEventListener('click', () => {\n    closeUploadModal();\n  });\n  document.addEventListener('keydown', (evt) => {\n    if(evt.key === Keys.ESC || evt.key === Keys.ESCAPE) {\n      closeUploadModal();\n      evt.stopPropagation();\n    }\n  });\n});\n\n\n\n//  Зум изображения\n\nconst changeScale = (direction) => {\n  let scale = parseInt(scaleValue.value);\n  const step = Scale.STEP * (direction === 'bigger' ? 1 : -1);\n\n  scale += step;\n  if (scale >= Scale.MAX) {\n    scale = Scale.MAX;\n  } else if (scale <= Scale.MIN) {\n    scale = Scale.MIN;\n  }\n\n  scaleValue.value = scale + '%';\n  scale /= 100;\n  imgPreview.style.transform = `scale(${scale})`;\n};\n\nscaleBiggerBtn.addEventListener('click', () => {\n  changeScale('bigger');\n});\n\nscaleSmallerBtn.addEventListener('click', () => {\n  changeScale('smaller');\n});\n\n\nexport { closeUploadModal }\n","const URLS = {\n  GET: 'https://23.javascript.htmlacademy.pro/kekstagram/data',\n  POST: 'https://reqres.in/api/users'\n}\n\n\nconst request = (onSuccess, onError, method, data) => {\n  fetch(URLS[method], {\n    method: method,\n    body: data,\n  })\n  .then((response) => response.json())\n  .then((data) => {\n    onSuccess(data)\n  })\n  .catch(() =>\n    onError()\n    )\n\n\n}\n\nexport{ request }\n","import { request } from './fetch.js';\nimport { checkEscapeKey } from './itil.js'\nimport { closeUploadModal } from './editor.js'\nconst currentForm = document.querySelector('.img-upload__form'); // находим форму\nconst errorTemplate = document.querySelector('#error').content.querySelector('.error');\nconst successTemplate = document.querySelector('#success').content.querySelector('.success')\nconst body= document.querySelector('body')\n\n// Функция показа с удалением слушателей при успешной отправке\nconst onSuccess = () => {\n  let successSection = successTemplate.cloneNode(true)\n  let closeSuccessSectionBtn = successSection.querySelector('.success__button');\n  currentForm.reset()\n  const closeSuccessSection = () => {\n    successSection.remove();\n    closeSuccessSectionBtn.removeEventListener('click', closeSuccessSection);\n    document.removeEventListener('keydown', closeSuccessSection);\n  };\n\n  closeSuccessSectionBtn.addEventListener('click', closeSuccessSection);\n  document.addEventListener('keydown', (evt) => {\n    if (checkEscapeKey(evt)) {\n      closeSuccessSection()\n    }\n  });\n  closeUploadModal()\n  body.appendChild(successSection);\n}\n\n//Функция показа с удалением слушателей при ошибке в отправке отправке\nconst onErorre = () => {\n  let errorSection = errorTemplate.cloneNode(true)\n  let closeEroreSectionBtn = errorSection.querySelector('.error__button');\n  // closeEroreSectionBtn.texContent = 'Перезагрузить сайт '\n\n  const closeErrorSection = () => {\n    errorSection.remove();\n    closeEroreSectionBtn.removeEventListener('click', closeErrorSection);\n    document.removeEventListener('keydown', closeSuccessSection);\n  };\n\n  closeEroreSectionBtn.addEventListener('click', closeErrorSection);\n  document.addEventListener('keydown', (evt) => {\n    if (checkEscapeKey(evt)) {\n      closeErrorSection()\n    }\n  });\n  closeUploadModal()\n  body.appendChild(errorSection);\n}\n\n\ncurrentForm.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n\n  const formData = new FormData(evt.target);\n  console.log('форма аля улю')\n  request (onSuccess, onErorre, 'POST', formData)\n});\n\nexport { onErorre }\n","import './itil.js';\nimport './preview.js';\nimport './full-preview.js';\nimport './effect.js';\nimport './editor.js';\nimport './valid.js'\nimport './sending-form.js'\nimport './fetch.js'\nimport './show-new-photo.js'\n\nimport { renderPhotos } from './preview.js';\nimport { request } from './fetch.js';\nimport { shuffleArray, debounce } from './itil.js'\nconst DEFAULT_PREVIEW_LOAD = 25;\nconst RANDOM_PREVIEW_LOAD = 10;\nconst DELEY_TIME = 300;\n\nconst errorTemplate = document.querySelector('#error').content.querySelector('.error');\nconst body = document.querySelector('body');\nconst filtrBlock = document.querySelector('.img-filters');\nconst filterBtns = filtrBlock.querySelectorAll('button')\nlet photos = [];\n\n\nconst removeActiveClass = () => {\n  filterBtns.forEach((el) => {\n    el.classList.remove('img-filters__button--active')\n  })\n}\n\nconst removePhotos = () => {\n  let images = document.querySelectorAll('.picture')\n  if (images) {\n    images.forEach(el => {\n      el.remove()\n    })\n  }\n}\n\nconst filtres = {\n'filter-default': () => renderPhotos(photos.slice(0, DEFAULT_PREVIEW_LOAD)),\n'filter-discussed': () => renderPhotos(photos.slice().sort((a, b) => b.comments.length  - a.comments.length)),\n'filter-random': () => renderPhotos(shuffleArray(photos.slice()).slice(0, RANDOM_PREVIEW_LOAD)),\n}\n\n\nconst onSuccess = (data) => {\n photos = data;\n renderPhotos(photos.slice())\n filtrBlock.classList.remove('img-filters--inactive');\n}\n\n\nconst onError = (data) => {\n  let erorrReceivingData = errorTemplate.cloneNode(true)\n  let closeEroreReceivingBtn = erorrReceivingData.querySelector('.error__button');\n  let erorTitle = erorrReceivingData.querySelector('.error__title').textContent = 'Проблема с сервером';\n  closeEroreReceivingBtn.textContent = 'Перезагрузить сайт';\n\n  const closeErrorRecievingSection = () => {\n    window.location.reload();\n    erorrReceivingData.remove();\n    closeEroreReceivingBtn.removeEventListener('click', closeErrorRecievingSection);\n\n  };\n  closeEroreReceivingBtn.addEventListener('click', closeErrorRecievingSection);\n  body.appendChild(erorrReceivingData);\n}\n\nrequest (onSuccess, onError, 'GET',)\n\nconst onFilterClickClasses = (evt) => {\n  if (evt.target.classList.contains('img-filters__button')) {\n  removeActiveClass()\n  evt.target.classList.add('img-filters__button--active');\n}\n}\n\nconst onFilterClick =  debounce((evt) => {\n  if (evt.target.classList.contains('img-filters__button')) {\n    removePhotos()\n    filtres[evt.target.id]()\n  }\n}, DELEY_TIME )\n\nfiltrBlock.addEventListener('click', onFilterClick)\n\nfiltrBlock.addEventListener('click', onFilterClickClasses)\n"],"names":["uploadInput","document","querySelector","previewPhoto","effectPrew","querySelectorAll","CORRECT_EXTENSIONS_NAMES","addEventListener","evt","file","files","nameFile","name","toLowerCase","some","it","endsWith","reader","FileReader","src","result","width","height","style","backgroundSize","forEach","element","backgroundImage","readAsDataURL","hashtagInput","comentInput","stopPropEsc","el","key","stopPropagation","blur","setCustomValidity","inputText","value","trim","inputArray","split","item","boxShadow","length","indexOf","filter","index","test","isSpecialSimbol","textarea","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","checkEscapeKey","bigPhoto","body","comentsList","comentTemplate","content","modalCloseBtn","comentsLoaderBtn","socialCommentCount","comentBtn","likeCounter","loadedComents","comentsArray","commentsToShow","showComments","comments","textContent","slice","comment","newComment","commentData","cloneNode","avatar","alt","message","createComment","appendChild","Array","from","display","closeBigPhoto","classList","add","remove","removeEventListener","likes","contains","Number","toggle","id","unshift","console","log","NEW_POST_TEMPLATE","PICTURES_LIST","PostListFragment","createDocumentFragment","renderPhotos","data","newPost","url","description","newPhoto","createPostElement","post","preventDefault","coments","show","attachPreviewHandler","EFFECTS","min","max","step","unit","effects","slider","sliderContainer","effectLevel","DEFAULT_EFFECT","chosenEffect","isDefault","hideSlider","noUiSlider","create","range","start","connect","target","find","effect","className","updateOptions","on","sliderValue","get","uploadModal","CloseUploadModalBtn","scaleValue","scaleSmallerBtn","scaleBiggerBtn","imgPreview","closeUploadModal","selectedFile","changeScale","direction","scale","parseInt","transform","URLS","GET","POST","request","onSuccess","onError","method","fetch","then","response","json","catch","currentForm","errorTemplate","successTemplate","successSection","closeSuccessSectionBtn","reset","closeSuccessSection","onErorre","errorSection","closeEroreSectionBtn","closeErrorSection","formData","FormData","filtrBlock","filterBtns","photos","filtres","sort","a","b","array","i","j","Math","floor","random","shuffleArray","erorrReceivingData","closeEroreReceivingBtn","closeErrorRecievingSection","window","location","reload","onFilterClick","cb","delay","timerId","args","clearTimeout","setTimeout","images","removePhotos","debounce"],"sourceRoot":""}